buffer.remaining(),clone
allocate(buffer.remaining()),clone
buffer.remaining(),clone
cloned.mark(),clone
cloned.put(buffer.duplicate()),clone
buffer.duplicate(),clone
cloned.reset(),clone
super.newRow(clustering.copy(allocator)),newRow
clustering.copy(allocator),newRow
super.addCell(cell.copy(allocator)),addCell
cell.copy(allocator),addCell
holder(),deletionInfo
holder(),staticRow
holder(),isEmpty
holder.deletionInfo.isLive(),isEmpty
BTree.isEmpty(holder.tree),isEmpty
holder.staticRow.isEmpty(),isEmpty
holder(),hasRows
BTree.isEmpty(holder.tree),hasRows
holder(),partitionLevelDeletion
holder().deletionInfo.getPartitionDeletion(),partitionLevelDeletion
holder(),columns
holder(),stats
"searchIterator(ColumnFilter.selection(columns()),false)",getRow
ColumnFilter.selection(columns()),getRow
columns(),getRow
"searchIterator(ColumnFilter.selection(columns()),false).next(clustering)",getRow
row.isEmpty(),getRow
current.deletionInfo.getPartitionDeletion(),staticRow
columns.fetchedColumns(),staticRow
columns.fetchedColumns().statics.isEmpty(),staticRow
current.staticRow.isEmpty(),staticRow
partitionDeletion.isLive(),staticRow
"current.staticRow.filter(columns,partitionDeletion,setActiveDeletionToRow,metadata)",staticRow
rawIter.hasNext(),hasNext
"staticRow(current,columns,true)",next
rawIter.next(clustering),next
current.deletionInfo.rangeCovering(clustering),next
rt.deletionTime(),next
rt.deletionTime().supersedes(activeDeletion),next
rt.deletionTime(),next
activeDeletion.isLive(),next
"BTreeRow.emptyDeletedRow(clustering,Row.Deletion.regular(activeDeletion))",next
Row.Deletion.regular(activeDeletion),next
"row.filter(columns,activeDeletion,true,metadata)",next
"staticRow(current,columns,true)",searchIterator
rawIter.next(clustering),searchIterator
current.deletionInfo.rangeCovering(clustering),searchIterator
rt.deletionTime(),searchIterator
rt.deletionTime().supersedes(activeDeletion),searchIterator
rt.deletionTime(),searchIterator
activeDeletion.isLive(),searchIterator
"BTreeRow.emptyDeletedRow(clustering,Row.Deletion.regular(activeDeletion))",searchIterator
Row.Deletion.regular(activeDeletion),searchIterator
"row.filter(columns,activeDeletion,true,metadata)",searchIterator
"unfilteredIterator(ColumnFilter.all(metadata()),Slices.ALL,false)",unfilteredIterator
ColumnFilter.all(metadata()),unfilteredIterator
metadata(),unfilteredIterator
"unfilteredIterator(holder(),selection,slices,reversed)",unfilteredIterator
holder(),unfilteredIterator
"staticRow(current,selection,false)",unfilteredIterator
slices.size(),unfilteredIterator
current.deletionInfo.getPartitionDeletion(),unfilteredIterator
"UnfilteredRowIterators.noRowsIterator(metadata,partitionKey,staticRow,partitionDeletion,reversed)",unfilteredIterator
slices.size(),unfilteredIterator
"sliceIterator(selection,slices.get(0),reversed,current,staticRow)",unfilteredIterator
slices.get(0),unfilteredIterator
slice.start(),sliceIterator
slice.start(),sliceIterator
slice.end(),sliceIterator
slice.end(),sliceIterator
"BTree.slice(current.tree,metadata.comparator,start,true,end,true,desc(reversed))",sliceIterator
desc(reversed),sliceIterator
"current.deletionInfo.rangeIterator(slice,reversed)",sliceIterator
"merge(rowIter,deleteIter,selection,reversed,current,staticRow)",sliceIterator
current.deletionInfo.getPartitionDeletion(),merge
canHaveShadowedData(),merge
slices.size(),computeNext
endOfData(),computeNext
slices.size(),computeNext
"sliceIterator(selection,slices.get(sliceIdx),isReverseOrder,current,Rows.EMPTY_STATIC_ROW)",computeNext
slices.get(sliceIdx),computeNext
currentSlice.hasNext(),computeNext
currentSlice.next(),computeNext
"unfilteredIterator(selection,Slices.ALL,isReverseOrder)",computeNext
iterator.hasNext(),computeNext
endOfData(),computeNext
iterator.next(),computeNext
"sliceIterator(selection,slice,isReverseOrder,current,staticRow)",slice
"sliceableUnfilteredIterator(ColumnFilter.all(metadata),false)",sliceableUnfilteredIterator
ColumnFilter.all(metadata),sliceableUnfilteredIterator
iterator.metadata(),build
iterator.columns(),build
iterator.isReverseOrder(),build
"BTree.builder(metadata.comparator,initialRowCapacity)",build
builder.auto(false),build
"MutableDeletionInfo.builder(iterator.partitionLevelDeletion(),metadata.comparator,reversed)",build
iterator.partitionLevelDeletion(),build
iterator.hasNext(),build
iterator.next(),build
unfiltered.kind(),build
builder.add((Row)unfiltered),build
deletionBuilder.add((RangeTombstoneMarker)unfiltered),build
builder.reverse(),build
builder.build(),build
deletionBuilder.build(),build
iterator.staticRow(),build
iterator.stats(),build
rows.metadata(),build
rows.columns(),build
rows.isReverseOrder(),build
"BTree.builder(metadata.comparator,initialRowCapacity)",build
builder.auto(false),build
rows.hasNext(),build
rows.next(),build
builder.add(row),build
builder.reverse(),build
rows.staticRow(),build
builder.build(),build
"EncodingStats.Collector.collect(staticRow,BTree.iterator(tree),deletion)",build
BTree.iterator(tree),build
"sb.append(String.format(""[%s.%s] key=%s columns=%s"",metadata.ksName,metadata.cfName,metadata.getKeyValidator().getString(partitionKey().getKey()),columns()))",toString
"String.format(""[%s.%s] key=%s columns=%s"",metadata.ksName,metadata.cfName,metadata.getKeyValidator().getString(partitionKey().getKey()),columns())",toString
metadata.getKeyValidator(),toString
metadata.getKeyValidator().getString(partitionKey().getKey()),toString
partitionKey(),toString
partitionKey().getKey(),toString
columns(),toString
staticRow(),toString
"sb.append(""\n    "")",toString
"sb.append(""\n    "").append(staticRow().toString(metadata))",toString
staticRow(),toString
staticRow().toString(metadata),toString
"sb.append(""\n    "")",toString
"sb.append(""\n    "").append(row.toString(metadata))",toString
row.toString(metadata),toString
sb.toString(),toString
BTree.size(holder().tree),rowCount
holder(),rowCount
holder(),iterator
holder(),lastRow
BTree.isEmpty(tree),lastRow
"BTree.findByIndex(tree,BTree.size(tree)-1)",lastRow
BTree.size(tree),lastRow
